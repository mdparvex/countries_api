# Generated by Django 5.2 on 2025-05-06 16:40

import django.contrib.postgres.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Continent',
            fields=[
                ('continent_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('currency_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('symbol', models.CharField(blank=True, max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('language_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('region_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='SubRegion',
            fields=[
                ('subregion_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('country_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.JSONField(default=dict)),
                ('cca2', models.CharField(max_length=10, unique=True)),
                ('ccn3', models.CharField(blank=True, max_length=10, null=True)),
                ('cioc', models.CharField(blank=True, max_length=10, null=True)),
                ('independent', models.BooleanField(default=False)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('un_member', models.BooleanField(default=False)),
                ('altSpellings', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, null=True, size=None)),
                ('latlng', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, null=True, size=None)),
                ('landlocked', models.BooleanField(default=False)),
                ('area', models.FloatField(null=True)),
                ('cca3', models.CharField(max_length=10, unique=True)),
                ('flag', models.CharField(blank=True, max_length=10, null=True)),
                ('maps', models.JSONField(default=dict)),
                ('population', models.IntegerField(null=True)),
                ('fifa', models.CharField(blank=True, max_length=10, null=True)),
                ('car', models.JSONField(default=dict)),
                ('timezones', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, null=True, size=None)),
                ('flags', models.JSONField(default=dict)),
                ('coatOfArms', models.JSONField(default=dict)),
                ('startOfWeek', models.CharField(blank=True, max_length=10, null=True)),
                ('capitalInfo', models.JSONField(default=dict)),
                ('postalCode', models.JSONField(default=dict)),
                ('continent', models.ManyToManyField(related_name='continent_countries', to='countries_info_api.continent')),
                ('currencies', models.ManyToManyField(blank=True, null=True, related_name='countries', to='countries_info_api.currency')),
                ('language', models.ManyToManyField(related_name='language_countries', to='countries_info_api.language')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='region_countries', to='countries_info_api.region')),
                ('sub_region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subregion_countries', to='countries_info_api.subregion')),
            ],
        ),
        migrations.CreateModel(
            name='Capital',
            fields=[
                ('capital_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='capitals', to='countries_info_api.country')),
            ],
        ),
        migrations.CreateModel(
            name='Border',
            fields=[
                ('border_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('border_with', models.CharField(max_length=10)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='borders', to='countries_info_api.country')),
            ],
        ),
        migrations.CreateModel(
            name='Demonym',
            fields=[
                ('demonym_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('language_code', models.CharField(max_length=10)),
                ('male', models.CharField(max_length=100)),
                ('female', models.CharField(max_length=100)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='demonyms', to='countries_info_api.country')),
            ],
        ),
        migrations.CreateModel(
            name='Gini',
            fields=[
                ('gini_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('year', models.CharField(blank=True, max_length=10, null=True)),
                ('value', models.FloatField(default=0.0)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gini_scores', to='countries_info_api.country')),
            ],
        ),
        migrations.CreateModel(
            name='Idd',
            fields=[
                ('idd_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('root', models.CharField(max_length=10)),
                ('country', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='idd', to='countries_info_api.country')),
            ],
        ),
        migrations.CreateModel(
            name='IddSuffix',
            fields=[
                ('suffix_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('suffix', models.CharField(max_length=10)),
                ('idd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suffixes', to='countries_info_api.idd')),
            ],
        ),
        migrations.CreateModel(
            name='Tld',
            fields=[
                ('tld_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('domain_name', models.CharField(max_length=50)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tlds', to='countries_info_api.country')),
            ],
        ),
        migrations.CreateModel(
            name='Translation',
            fields=[
                ('translation_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('language_code', models.CharField(max_length=10)),
                ('official', models.CharField(blank=True, max_length=255, null=True)),
                ('common', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='countries_info_api.country')),
            ],
        ),
    ]
